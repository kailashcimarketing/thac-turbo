# Generated by Django 4.2.16 on 2024-09-10 05:21

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.forms.models
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
        ('pages', '0008_delete_extrastylesettings'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('top_body', wagtail.fields.StreamField([('HtmlSourceBlock', 2), ('space', 4), ('ContentWithVariableWidthBlock', 17), ('TwoColumnBlock', 22)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'This label is for internal reference only and will not be displayed in the output.', 'required': False}), 1: ('wagtail.blocks.TextBlock', (), {}), 2: ('wagtail.blocks.StructBlock', [[('block_label', 0), ('source', 1)]], {}), 3: ('wagtail.blocks.IntegerBlock', (), {'default': 50}), 4: ('wagtail.blocks.StructBlock', [[('height', 3)]], {}), 5: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('col-lg-1', 'col-1'), ('col-lg-2', 'col-2'), ('col-lg-3', 'col-3'), ('col-lg-4', 'col-4'), ('col-lg-5', 'col-5'), ('col-lg-6', 'col-6'), ('col-lg-7', 'col-7'), ('col-lg-8', 'col-8'), ('col-lg-9', 'col-9'), ('col-lg-10', 'col-10'), ('col-lg-11', 'col-11'), ('col-lg-12', 'col-12')]}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('offset-lg-1', 'offset-1'), ('offset-lg-2', 'offset-2'), ('offset-lg-3', 'offset-3'), ('offset-lg-4', 'offset-4'), ('offset-lg-5', 'offset-5'), ('offset-lg-6', 'offset-6')], 'required': False}), 7: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('check-list', 'Checklist')], 'required': False}), 8: ('wagtail.blocks.RichTextBlock', (), {}), 9: ('wagtail.blocks.CharBlock', (), {'required': False}), 10: ('wagtail.blocks.StructBlock', [[('list_style', 7), ('content', 8), ('css_class', 9)]], {}), 11: ('wagtail.blocks.CharBlock', (), {}), 12: ('wagtail.blocks.StreamBlock', [[('html', 2), ('content', 10), ('space', 4)]], {}), 13: ('wagtail.blocks.StructBlock', [[('title', 11), ('content_blocks', 12)]], {}), 14: ('wagtail.blocks.ListBlock', (13,), {}), 15: ('wagtail.blocks.StructBlock', [[('items', 14)]], {}), 16: ('wagtail.blocks.StreamBlock', [[('html', 2), ('space', 4), ('content', 10), ('accordion', 15)]], {}), 17: ('wagtail.blocks.StructBlock', [[('column_width', 5), ('column_offset', 6), ('content_blocks', 16), ('css_class', 9)]], {}), 18: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('pt-0', 'No padding'), ('pt-1', '1x'), ('pt-2', '2x'), ('pt-3', '3x'), ('pt-4', '4x'), ('pt-5', '5x')], 'required': False}), 19: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('pb-0', 'No padding'), ('pb-1', '1x'), ('pb-2', '2x'), ('pb-3', '3x'), ('pb-4', '4x'), ('pb-5', '5x')], 'required': False}), 20: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('col-lg-1', 'col-1'), ('col-lg-2', 'col-2'), ('col-lg-3', 'col-3'), ('col-lg-4', 'col-4'), ('col-lg-5', 'col-5'), ('col-lg-6', 'col-6'), ('col-lg-7', 'col-7'), ('col-lg-8', 'col-8'), ('col-lg-9', 'col-9'), ('col-lg-10', 'col-10'), ('col-lg-11', 'col-11'), ('col-lg-12', 'col-12')], 'required': False}), 21: ('wagtail.blocks.StreamBlock', [[('html', 2), ('content', 10), ('space', 4), ('accordion', 15)]], {}), 22: ('wagtail.blocks.StructBlock', [[('top_padding', 18), ('bottom_padding', 19), ('left_column_width', 20), ('left_column_offset', 6), ('left_column', 21), ('right_column_width', 20), ('right_column_offset', 6), ('right_column', 21), ('css_class', 9)]], {})}, null=True)),
                ('bottom_body', wagtail.fields.StreamField([('HtmlSourceBlock', 2), ('space', 4), ('ContentWithVariableWidthBlock', 17), ('TwoColumnBlock', 22)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'This label is for internal reference only and will not be displayed in the output.', 'required': False}), 1: ('wagtail.blocks.TextBlock', (), {}), 2: ('wagtail.blocks.StructBlock', [[('block_label', 0), ('source', 1)]], {}), 3: ('wagtail.blocks.IntegerBlock', (), {'default': 50}), 4: ('wagtail.blocks.StructBlock', [[('height', 3)]], {}), 5: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('col-lg-1', 'col-1'), ('col-lg-2', 'col-2'), ('col-lg-3', 'col-3'), ('col-lg-4', 'col-4'), ('col-lg-5', 'col-5'), ('col-lg-6', 'col-6'), ('col-lg-7', 'col-7'), ('col-lg-8', 'col-8'), ('col-lg-9', 'col-9'), ('col-lg-10', 'col-10'), ('col-lg-11', 'col-11'), ('col-lg-12', 'col-12')]}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('offset-lg-1', 'offset-1'), ('offset-lg-2', 'offset-2'), ('offset-lg-3', 'offset-3'), ('offset-lg-4', 'offset-4'), ('offset-lg-5', 'offset-5'), ('offset-lg-6', 'offset-6')], 'required': False}), 7: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('check-list', 'Checklist')], 'required': False}), 8: ('wagtail.blocks.RichTextBlock', (), {}), 9: ('wagtail.blocks.CharBlock', (), {'required': False}), 10: ('wagtail.blocks.StructBlock', [[('list_style', 7), ('content', 8), ('css_class', 9)]], {}), 11: ('wagtail.blocks.CharBlock', (), {}), 12: ('wagtail.blocks.StreamBlock', [[('html', 2), ('content', 10), ('space', 4)]], {}), 13: ('wagtail.blocks.StructBlock', [[('title', 11), ('content_blocks', 12)]], {}), 14: ('wagtail.blocks.ListBlock', (13,), {}), 15: ('wagtail.blocks.StructBlock', [[('items', 14)]], {}), 16: ('wagtail.blocks.StreamBlock', [[('html', 2), ('space', 4), ('content', 10), ('accordion', 15)]], {}), 17: ('wagtail.blocks.StructBlock', [[('column_width', 5), ('column_offset', 6), ('content_blocks', 16), ('css_class', 9)]], {}), 18: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('pt-0', 'No padding'), ('pt-1', '1x'), ('pt-2', '2x'), ('pt-3', '3x'), ('pt-4', '4x'), ('pt-5', '5x')], 'required': False}), 19: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('pb-0', 'No padding'), ('pb-1', '1x'), ('pb-2', '2x'), ('pb-3', '3x'), ('pb-4', '4x'), ('pb-5', '5x')], 'required': False}), 20: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('col-lg-1', 'col-1'), ('col-lg-2', 'col-2'), ('col-lg-3', 'col-3'), ('col-lg-4', 'col-4'), ('col-lg-5', 'col-5'), ('col-lg-6', 'col-6'), ('col-lg-7', 'col-7'), ('col-lg-8', 'col-8'), ('col-lg-9', 'col-9'), ('col-lg-10', 'col-10'), ('col-lg-11', 'col-11'), ('col-lg-12', 'col-12')], 'required': False}), 21: ('wagtail.blocks.StreamBlock', [[('html', 2), ('content', 10), ('space', 4), ('accordion', 15)]], {}), 22: ('wagtail.blocks.StructBlock', [[('top_padding', 18), ('bottom_padding', 19), ('left_column_width', 20), ('left_column_offset', 6), ('left_column', 21), ('right_column_width', 20), ('right_column_offset', 6), ('right_column', 21), ('css_class', 9)]], {})}, null=True)),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Form Page',
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='pages.formpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
